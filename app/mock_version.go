// Automatically generated by MockGen. DO NOT EDIT!
// Source: version.go

package app

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Version interface
type MockVersion struct {
	ctrl     *gomock.Controller
	recorder *_MockVersionRecorder
}

// Recorder for MockVersion (not exported)
type _MockVersionRecorder struct {
	mock *MockVersion
}

func NewMockVersion(ctrl *gomock.Controller) *MockVersion {
	mock := &MockVersion{ctrl: ctrl}
	mock.recorder = &_MockVersionRecorder{mock}
	return mock
}

func (_m *MockVersion) EXPECT() *_MockVersionRecorder {
	return _m.recorder
}

func (_m *MockVersion) Describe() string {
	ret := _m.ctrl.Call(_m, "Describe")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockVersionRecorder) Describe() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Describe")
}

func (_m *MockVersion) Version() string {
	ret := _m.ctrl.Call(_m, "Version")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockVersionRecorder) Version() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Version")
}

func (_m *MockVersion) Metadata() VersionMetadata {
	ret := _m.ctrl.Call(_m, "Metadata")
	ret0, _ := ret[0].(VersionMetadata)
	return ret0
}

func (_mr *_MockVersionRecorder) Metadata() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Metadata")
}
